import java.util.*;
import java.lang.*;
import java.io.*;

public class UnboundedKnapSack {
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t>0){
		    int W=sc.nextInt();
		    int price[]=new int[W];
		    int length[]=new int[W];
		    //System.out.println(W);
		    for(int i=0;i<W;i++){
		        price[i]=sc.nextInt();
		        length[i]=i+1;
		    }   
		    int n=price.length;
		    System.out.println(knapSack(W,length,price,n));
		    t--;
		        
		}
	}
	public static int knapSack(int W, int length[], int price[], int n) 
    { 
        int k[][]=new int[n+1][W+1];
        int i,j;
        
        for(i=0;i<=n;i++){
            for(j=0;j<=W;j++){
                if(i==0 || j==0)
                    k[i][j]=0;
                else if(length[i-1]<=j){
                    k[i][j]= Math.max(price[i-1]+ k[i][j-length[i-1]], k[i-1][j]);
                }
                else{
                    k[i][j]= k[i-1][j];
                }
            }
        }
        return k[n][W];
    }
}
